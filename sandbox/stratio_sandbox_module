#!/bin/sh
echo "> Installing maven"
wget apache.rediris.es/maven/maven-3/3.3.3/binaries/apache-maven-3.3.3-bin.tar.gz
cd /module
tar -xzf apache-maven-3.3.3-bin.tar.gz -C /opt/sds
echo "export M2_HOME=/opt/sds/apache-maven-3.3.3" >> /home/vagrant/.bashrc
source ~/.bashrc
echo "export PATH=/opt/sds/apache-maven-3.3.3/bin:/usr/local/sbin:/sbin:/bin:/usr/sbin:/usr/bin:/root/bin" >> /home/vagrant/.bashrc

echo "> Starting MongoDB"
echo "smallfiles=true" >> /etc/mongod.conf
/sbin/service mongod start

echo "> Starting ElasticSearch"
/sbin/service elasticsearch start
echo "http.cors.enabled: true" >> /etc/sds/elasticsearch/elasticsearch.yml
/opt/sds/elasticsearch/bin/./plugin -install royrusso/elasticsearch-HQ
/opt/sds/elasticsearch/bin/./plugin -install mobz/elasticsearch-head

rm -f /etc/udev/rules.d/70-persistent-net.rules

#######################################
## Cassandra
#######################################
echo "Installing Cassandra..."
rpm --quiet -q stratio-cassandra || yum -y -q --nogpgcheck install stratio-cassandra

echo "Configuring Cassandra..."
##Config Cassandra:
sed -i "s/^\(num_tokens:\)/#\1/" /etc/sds/cassandra/cassandra.yaml
sed -i "s/^# \(initial_token:\)/\1/" /etc/sds/cassandra/cassandra.yaml
sed -i "s/^\(hinted_handoff_enabled:\) true$/\1 false/" /etc/sds/cassandra/cassandra.yaml
sed -i "s/^\(concurrent_reads:\) 32$/\1 16/" /etc/sds/cassandra/cassandra.yaml
sed -i "s/^\(concurrent_writes:\) 32$/\1 8/" /etc/sds/cassandra/cassandra.yaml
sed -i "s/^\(concurrent_counter_writes:\) 32$/\1 16/" /etc/sds/cassandra/cassandra.yaml
sed -i "s/\(seeds:\) \"127.0.0.1\"/\1 \"$ipaddress\"/" /etc/sds/cassandra/cassandra.yaml
sed -i "s/^\(listen_address:\).*$/\1 $ipaddress/" /etc/sds/cassandra/cassandra.yaml
sed -i "s/^\(rpc_address:\).*$/\1 0.0.0.0/" /etc/sds/cassandra/cassandra.yaml
sed -i "s/^# \(broadcast_rpc_address:\).*$/\1 $ipaddress/" /etc/sds/cassandra/cassandra.yaml
sed -i "s/\(\-Dcassandra.logdir=\)\$CASSANDRA_HOME\/logs/\1\/var\/log\/sds\/cassandra/" /opt/sds/cassandra/bin/cassandra



#######################################
## Spark
#######################################
echo "Installing Spark..."
rpm --quiet -q stratio-spark || yum -y -q --nogpgcheck install stratio-spark

echo "Generating keys..."
mkdir /opt/sds/spark/.ssh
chmod 700 /opt/sds/spark/.ssh
ssh-keygen -t rsa -b 2048 -f /opt/sds/spark/.ssh/id_rsa -N ""
cp /opt/sds/spark/.ssh/id_rsa.pub /opt/sds/spark/.ssh/authorized_keys
chown -R spark:spark /opt/sds/spark/.ssh/
mkdir -p /user/hive/warehouse
mkdir -p /user/warehouse
chown -R stratio:stratio /user

#Config Spark
echo "Configuring Spark..."
sed -i "s/^\(spark.master\).*$/\1 spark:\/\/$ipaddress:7077/" /etc/sds/spark/spark-defaults.conf
sed -i "s/^export MESOS_NATIVE_LIBRARY=.*$//" /etc/sds/spark/spark-env.sh
sed -i "s/^export MASTER=.*$//" /etc/sds/spark/spark-env.sh
sed -i "s/^#export SPARK_EXECUTOR_URI=.*$//" /etc/sds/spark/spark-env.sh
sed -i "s/\(SPARK_WORKER_MEMORY=\)\"4g\"/\1\"2g\"/" /etc/sds/spark/spark-env.sh
sed -i "s/\(SPARK_WORKER_CORES\)=2/\1=1/" /etc/sds/spark/spark-env.sh
sed -i "s/^#\(SPARK_MASTER_IP=\)/\1$ipaddress/" /etc/sds/spark/spark-env.sh
sed -i "s/^#\(SPARK_EXECUTOR_MEMORY=\)/\1/" /etc/sds/spark/spark-env.sh
sed -i "s/^#\(SPARK_DRIVER_MEMORY=\)/\1/" /etc/sds/spark/spark-env.sh



#######################################
## Crossdata
#######################################
echo "> Installing Crossdata"
/usr/bin/yum -y install stratio-crossdata
/usr/bin/yum -y install stratio-crossdata-shell

sed -i "s/^\(crossdata-server.akka.remote.netty.tcp.hostname =\).*$/\1 \"$ipaddress\"/" /etc/sds/crossdata/server-application.conf
sed -i "s/^\(crossdata-server.akka.cluster.seed-nodes =\).*$/\1 \[\"akka.tcp\:\/\/CrossdataServerCluster\@$ipaddress\:13420\"\]/" /etc/sds/crossdata/server-application.conf
sed -i "s/^\(crossdata-driver.config.cluster.hosts =\).*$/\1 \[\"$ipaddress\:13420\"\]/" /etc/sds/crossdata-shell/driver-application.conf

echo "Configuring Crossdata..."
#Config Crossdata

chkconfig --add crossdata
chkconfig --add cassandra
chkconfig crossdata off
chkconfig cassandra on
chkconfig --list

echo "Starting services..."
service cassandra start
service crossdata start

yum clean all
dd if=/dev/zero of=/EMPTY bs=1M
rm -f /EMPTY